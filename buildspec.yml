version: 0.2

phases:
  install:
    commands:
      #- wget https://releases.hashicorp.com/terraform/1.2.6/terraform_1.2.6_linux_amd64.zip
      #- unzip terraform_1.2.6_linux_amd64.zip
      #- apt-get install terraform
      - wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
      - echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
      - apt update && sudo apt install terraform

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      # Nur relevant wenn man einen dockerhub limit exceeded error bekommt!
      # Dann aber auch die beiden Environmentvariables in CodeBuild setzen!
      - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - echo starting Infrastructure
      - cd tf
      - terraform init --upgrade
      - terraform apply --auto-approve
      - cd ..

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG      

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      #- aws elasticbeanstalk rebuild-environment --environment-name Cloudbootcampniclasgregorapplication-env